name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  build-artifacts:
    name: Build artifacts
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - name: Check out repo
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          persist-credentials: false

      - name: Set up .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0

      - name: Publish project
        working-directory: src/KeyConnector
        run: |
          echo "Publish"
          dotnet publish -c "Release" -o obj/build-output/publish
          cd obj/build-output/publish
          zip -r KeyConnector.zip .
          mv KeyConnector.zip ../../../
          pwd
          ls -atlh ../../../

      - name: Upload project artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: KeyConnector.zip
          path: src/KeyConnector/KeyConnector.zip
          if-no-files-found: error

  build-docker:
    name: Build Docker images
    runs-on: ubuntu-24.04
    needs: build-artifacts
    permissions:
      security-events: write
      id-token: write
    env:
      _AZ_REGISTRY: bitwardenprod.azurecr.io
      _PROJECT_NAME: key-connector
    steps:
      - name: Check out repo
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          persist-credentials: false

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Log in to ACR
        run: az acr login -n "${_AZ_REGISTRY%.azurecr.io}"

      - name: Generate Docker image tag
        id: tag
        run: |
          IMAGE_TAG=$(echo "${GITHUB_REF:11}" | sed "s#/#-#g")  # slash safe branch name
          if [[ "$IMAGE_TAG" == "main" ]]; then
            IMAGE_TAG=dev
          fi
          echo "image_tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"

      - name: Generate full image name
        id: image-name
        env:
          IMAGE_TAG: ${{ steps.tag.outputs.image_tag }}
        run: echo "name=${_AZ_REGISTRY}/${_PROJECT_NAME}:${IMAGE_TAG}" >> "$GITHUB_OUTPUT"

      - name: Get build artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: KeyConnector.zip

      - name: Set up build artifact
        run: |
          mkdir -p src/KeyConnector/obj/build-output/publish
          unzip KeyConnector.zip -d src/KeyConnector/obj/build-output/publish

      - name: Build Docker image
        id: build-docker
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: src/KeyConnector
          file: src/KeyConnector/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.image-name.outputs.name }}

      - name: Install Cosign
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      - name: Sign image with Cosign
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        env:
          DIGEST: ${{ steps.build-docker.outputs.digest }}
          TAGS: ${{ steps.image-name.outputs.name }}
        run: |
          IFS=',' read -r -a tags_array <<< "${TAGS}"
          images=()
          for tag in "${tags_array[@]}"; do
            images+=("${tag}@${DIGEST}")
          done
          cosign sign --yes "${images[@]}"
          echo "images=${images[*]}" >> "$GITHUB_OUTPUT"

      - name: Scan Docker image
        id: container-scan
        uses: anchore/scan-action@2c901ab7378897c01b8efaa2d0c9bf519cc64b9e # v6.2.0
        with:
          image: ${{ steps.image-name.outputs.name }}
          fail-build: false
          output-format: sarif

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Upload Grype results to GitHub
        uses: github/codeql-action/upload-sarif@80cb6b56b93de3e779c7d476d9100d06fb87c877 # codeql-bundle-v2.23.2
        with:
          sarif_file: ${{ steps.container-scan.outputs.sarif }}
          sha: ${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.sha || github.sha }}
          ref: ${{ contains(github.event_name, 'pull_request') && format('refs/pull/{0}/head', github.event.pull_request.number) || github.ref }}
